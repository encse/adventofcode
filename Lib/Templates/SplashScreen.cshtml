@inherits AdventOfCode2017.Templates.BaseTemplate<AdventOfCode2017.Templates.SplashScreenModel>
using System;
using System.IO;
using System.Linq;
using System.Collections.Generic;
using HtmlAgilityPack;

namespace AdventOfCode2017 {

    class SplashScreen {

        public static void Show() {

            var defaultColor = Console.ForegroundColor;
            try {

                @{
                    var theme = new System.Collections.Generic.Dictionary<string, string>() {
                        ["calendar-edge"] = "ConsoleColor.Gray",
                        ["calendar-star"] = "ConsoleColor.Yellow",
                        ["calendar-ornament0"] = "ConsoleColor.White",
                        ["calendar-ornament1"] = "ConsoleColor.Green",
                        ["calendar-ornament2"] = "ConsoleColor.Red",
                        ["calendar-ornament3"] = "ConsoleColor.Blue",
                        ["calendar-ornament4"] = "ConsoleColor.Magenta",
                        ["calendar-ornament5"] = "ConsoleColor.Cyan",
                        ["calendar-ornament3"] = "ConsoleColor.DarkCyan",
                    };
                    var tab = "           ";
                    <text>
                    Console.Write("@tab");
                    </text>
                    foreach (var token in Model.Calendar) {
                        @{
                            var consoleColor = token.Style != null && theme.TryGetValue(token.Style, out var themeColor)
                                ? themeColor 
                                : "ConsoleColor.DarkGray";
                        }
                        <text>
                        Console.ForegroundColor = @consoleColor;
                        Console.Write("@(ToLiteral(token.Text))");
                        </text>
                        if (token.Text.EndsWith("\n")) {
                            <text>
                            Console.Write("@tab");
                            </text>
                        }
                    }
                }

            } finally {
                Console.ForegroundColor = defaultColor;
            }
            Console.WriteLine();
            Console.WriteLine(
                string.Join("\n", @@"
                      _      _             _          __    ___         _       ___ __  _ ____ 
                     /_\  __| |_ _____ _ _| |_   ___ / _|  / __|___  __| |___  |_  )  \/ |__  |
                    / _ \/ _` \ V / -_) ' \  _| / _ \  _| | (__/ _ \/ _` / -_)  / / () | | / / 
                   /_/ \_\__,_|\_/\___|_||_\__| \___/_|    \___\___/\__,_\___| /___\__/|_|/_/  
                   "
                .Split('\n').Skip(1).Select(x => x.Substring(19))));
        }
    }
}